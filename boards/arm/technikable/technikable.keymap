/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define TBLE_ORTHO   true

#define DEF 0
#define NAV 1
#define SYM 2
#define NUM 3
#define FUN 4
#define MED 5
#define XTR 5

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick-tap-ms = <200>; };

#define BT(n) BT_SEL n
#define LCA(n) LC(LA(n))
#define MEH(n) LS(LC(LA(n)))

/ {
    chosen {
       zmk,matrix_transform = &ortho_transform;
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;                        // <---[[produces tap if held longer than tapping-term-ms]]
            quick-tap-ms = <100>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        jump_left: jump_left {
            label = "jump_left";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <33>;
            bindings
                = <&macro_tap &kp LARW &kp LARW &kp LARW &kp LARW &kp LARW &kp LARW &kp LARW &kp LARW &kp LARW &kp LARW>;
        };
        jump_right: jump_right {
            label = "jump_right";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <33>;
            bindings
                = <&macro_tap &kp RARW &kp RARW &kp RARW &kp RARW &kp RARW &kp RARW &kp RARW &kp RARW &kp RARW &kp RARW>;
        };
        jump_down: jump_down {
            label = "jump_down";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <66>;
            bindings
                = <&macro_tap &kp DARW &kp DARW &kp DARW &kp DARW &kp DARW>;
        };
        jump_up: jump_up {
            label = "jump_up";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <66>;
            bindings
                = <&macro_tap &kp UARW &kp UARW &kp UARW &kp UARW &kp UARW>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <
&kp Q           &kp W           &kp F           &kp P           &kp G           &none           &none           &kp J           &kp L           &kp U           &kp Y           &kp SEMI
&hm LSFT A      &hm LCTL R      &hm LALT S      &hm LGUI T      &kp D           &none           &none           &kp H           &hm RGUI N      &hm RALT E      &hm RCTL I      &hm RSFT O
&kp Z           &kp X           &kp C           &kp V           &kp B           &none           &none           &kp K           &kp M           &kp COMMA       &kp DOT         &kp SLASH
                               &lt XTR LS(TAB)  &lt NAV SPACE   &lt NUM TAB     &none           &none           &lt FUN BSPC    &lt SYM SPACE   &lt MED DEL
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
&kp MEH(F13)    &kp LCA(F13)    &kp LCA(F14)    &kp LCA(F15)    &kp LCA(F16)    &trans          &trans          &trans          &trans          &kp UARW        &trans      &trans
&kp LSHFT       &kp LCTRL       &kp LALT        &kp LGUI        &trans          &trans          &trans          &trans          &kp LARW        &kp DARW        &kp RARW        &trans
&trans          &trans          &trans          &kp CAPSLOCK    &trans          &trans          &trans          &trans          &kp HOME        &kp PG_UP       &kp PG_DN       &kp END
                                &trans          &trans          &trans          &trans          &trans          &trans          &kp RET         &trans
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
&kp EXCL        &kp AT          &kp HASH        &kp DLLR        &kp PRCNT       &trans          &trans          &trans          &kp LT          &kp EQUAL       &kp GT          &kp BACKSLASH
&kp LBRC        &kp RBRC        &kp LPAR        &kp RPAR        &kp UNDER       &trans          &trans          &trans          &kp RGUI        &kp RALT        &kp RCTL        &kp RSHFT
&kp LT          &kp GT          &kp LBKT        &kp RBKT        &kp CARET       &trans          &trans          &trans          &kp DQT         &kp SQT         &kp GRAVE       &kp TILDE
                                &trans          &kp ESC         &trans          &trans          &trans          &trans          &trans          &trans
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
&trans          &kp LG(BSPC)    &kp BSPC        &kp RET         &kp ESC         &trans          &trans          &kp AMPS        &kp N7          &kp N8          &kp N9          &kp PIPE
&kp LSHFT       &kp LCTRL       &kp LALT        &kp LGUI        &trans          &trans          &trans          &kp PLUS        &kp N4          &kp N5          &kp N6          &kp MINUS
&kp LG(Z)       &kp LG(X)       &kp LG(C)       &kp LG(V)       &kp LG(A)       &trans          &trans          &kp ASTRK       &kp N1          &kp N2          &kp N3          &kp SLASH
                                &trans          &trans          &trans          &trans          &trans          &kp EQUAL       &kp N0          &kp DOT
            >;
        };

        fun_layer {
            label = "Fun";
            bindings = <
&kp F9          &kp F10         &kp F11         &kp F12         &kp F18         &trans          &trans          &trans          &trans          &trans          &trans          &trans
&kp F5          &kp F6          &kp F7          &kp F8          &kp F17         &trans          &trans          &trans          &kp RGUI        &kp RALT        &kp RCTL        &kp RSHFT
&kp F1          &kp F2          &kp F3          &kp F4          &kp F16         &trans          &trans          &trans          &trans          &trans          &trans          &trans
                                &kp F13         &kp F14         &kp F15         &trans          &trans          &trans          &trans          &trans
            >;
        };


        med_layer {
            label = "Med";
            bindings = <
&trans          &trans          &kp C_BRI_UP    &kp C_VOL_UP    &trans          &trans          &trans          &trans          &trans          &trans          &trans          &sys_reset
&trans          &trans          &kp C_BRI_DN    &kp C_VOL_DN    &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans
&trans          &trans          &trans          &kp C_MUTE      &trans          &trans          &trans          &bt BT_CLR      &bt BT(0)       &bt BT(1)       &bt BT(2)       &bt BT(3)
                                &kp C_PREV      &kp C_PP        &kp C_NEXT      &trans          &trans          &trans          &trans          &trans
            >;
        };

        xtr_layer {
            label = "Ext";
            bindings = <
&trans          &trans          &kp UARW        &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans
&trans          &kp LARW        &kp DARW        &kp RARW        &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans
&trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans
                                &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans
            >;
        };
    };
};

