/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define TBLE_ORTHO   true

#define DEF 0
#define NAV 1
#define MSE 2
#define SYM 3
#define NUM 4
#define FUN 5
#define WNA 6
#define WNB 7
#define SPC 8
#define WSD 9

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick-tap-ms = <200>; };

#define BT(n) BT_SEL n
#define SC(n) LS(LC(n))
#define SA(n) LS(LA(n))
#define CA(n) LC(LA(n))
#define MEH(n) LS(LC(LA(n)))
#define HPR(n) LS(LC(LA(LG(n))))

/ {
    chosen {
       zmk,physical-layout = &technikable_ortho_layout;
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;                        // <---[[produces tap if held longer than tapping-term-ms]]
            quick-tap-ms = <100>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        jump_left: jump_left {
            label = "jump_left";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <33>;
            bindings
                = <&macro_tap &kp LARW &kp LARW &kp LARW &kp LARW &kp LARW &kp LARW &kp LARW &kp LARW &kp LARW &kp LARW>;
        };
        jump_right: jump_right {
            label = "jump_right";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <33>;
            bindings
                = <&macro_tap &kp RARW &kp RARW &kp RARW &kp RARW &kp RARW &kp RARW &kp RARW &kp RARW &kp RARW &kp RARW>;
        };
        jump_down: jump_down {
            label = "jump_down";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <66>;
            bindings
                = <&macro_tap &kp DARW &kp DARW &kp DARW &kp DARW &kp DARW>;
        };
        jump_up: jump_up {
            label = "jump_up";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <66>;
            bindings
                = <&macro_tap &kp UARW &kp UARW &kp UARW &kp UARW &kp UARW>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Default";
            bindings = <
&kp Q           &kp W           &kp F           &kp P           &kp G           &none           &none           &kp J           &kp L           &kp U           &kp Y           &kp SEMI
&hm LSFT A      &hm LCTL R      &hm LALT S      &hm LGUI T      &kp D           &to WSD         &to WSD         &kp H           &hm RGUI N      &hm RALT E      &hm RCTL I      &hm RSFT O
&kp Z           &kp X           &kp C           &kp V           &kp B           &to ADM         &to ADM         &kp K           &kp M           &kp COMMA       &kp DOT         &kp SLASH
                                &lt ADM LS(TAB) &lt NAV SPACE   &lt NUM TAB     &to DEF         &to DEF         &lt FUN BSPC    &lt SYM SPACE   &lt WNA DEL
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
&kp MEH(F13)    &kp CA(F13)     &kp CA(F14)     &kp CA(F15)     &kp CA(F16)     &none           &none           &none           &kp PG_UP       &kp UARW        &kp HOME        &none 
&kp LSHFT       &kp LCTRL       &kp LALT        &kp LGUI        &trans          &trans          &trans          &kp CAPS        &kp LARW        &kp DARW        &kp RARW        &none 
&none           &none           &none           &mo MSE         &trans          &trans          &trans          &none           &kp PG_DN       &none           &kp END         &none 
                                &none           &trans          &none           &trans          &trans          &kp BSPC        &kp RET         &kp DEL
            >;
        };

        mse_layer {
            label = "Mouse";
            bindings = <
&none           &none           &none           &none           &none           &none           &none           &none           &none           &msc SCRL_UP    &none           &none 
&kp LSHFT       &kp LCTRL       &kp LALT        &kp LGUI        &none           &trans          &trans          &none           &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_RIGHT &none 
&none           &none           &none           &trans          &none           &trans          &trans          &none           &none           &none           &none           &none 
                                &none           &trans          &none           &trans          &trans          &mkp MCLK       &mkp LCLK       &mkp RCLK
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
&kp EXCL        &kp AT          &kp HASH        &kp DLLR        &kp PRCNT       &none           &none           &none           &kp LT          &kp EQUAL       &kp GT          &kp BSLH 
&kp LBRC        &kp RBRC        &kp LPAR        &kp RPAR        &kp UNDER       &trans          &trans          &none           &kp RGUI        &kp RALT        &kp RCTL        &kp RSHFT
&kp LT          &kp GT          &kp LBKT        &kp RBKT        &kp CARET       &trans          &trans          &none           &kp DQT         &kp SQT         &kp GRAVE       &kp TILDE
                                &none           &kp ESC         &none           &trans          &trans          &none           &trans          &none 
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
&kp ESC         &kp LG(BSPC)    &kp BSPC        &kp RET         &none           &none           &none           &kp AMPS        &kp N7          &kp N8          &kp N9          &kp PIPE
&kp LSHFT       &kp LCTRL       &kp LALT        &kp LGUI        &none           &trans          &trans          &kp PLUS        &kp N4          &kp N5          &kp N6          &kp MINUS
&kp LG(Z)       &kp LG(X)       &kp LG(C)       &kp LG(V)       &kp LG(A)       &trans          &trans          &kp ASTRK       &kp N1          &kp N2          &kp N3          &kp SLASH
                                &none           &none           &trans          &trans          &trans          &kp EQUAL       &kp N0          &kp DOT
            >;
        };

        fun_layer {
            label = "Fun";
            bindings = <
&kp F9          &kp F10         &kp F11         &kp F12         &none           &none           &none           &none           &none           &none           &none           &none 
&kp F5          &kp F6          &kp F7          &kp F8          &kp F17         &trans          &trans          &none           &kp RGUI        &kp RALT        &kp RCTL        &kp RSHFT
&kp F1          &kp F2          &kp F3          &kp F4          &kp F16         &trans          &trans          &none           &none           &none           &none           &none 
                                &kp F13         &kp F14         &kp F15         &trans          &trans          &trans          &none           &none 
            >;
        };

        wna_layer {
            label = "WinA";
            bindings = <
&none           &kp F20         &kp LS(F20)     &kp LC(F20)     &none           &none           &none           &none           &none           &none           &none           &none 
&none           &kp F19         &kp LS(F19)     &kp LC(F19)     &none           &trans          &trans          &none           &kp RGUI        &kp RALT        &none           &mo WNB
&none           &kp F18         &kp LS(F18)     &kp LC(F18)     &none           &trans          &trans          &none           &none           &none           &none           &none 
                                &none           &kp SC(F18)     &none           &trans          &trans          &none           &none           &trans
            >;
        };

        wnb_layer {
            label = "WinB";
            bindings = <
&none           &kp MEH(GRAVE)  &kp MEH(MINUS)  &kp MEH(EQUAL)  &none           &none           &none           &none           &none           &none           &none           &none 
&none           &kp SC(GRAVE)   &kp SC(MINUS)   &kp SC(EQUAL)   &none           &trans          &trans          &none           &kp RGUI        &none           &none           &trans
&none           &kp SC(BSLH)    &kp MEH(BSLH)   &kp SC(F20)     &none           &trans          &trans          &none           &none           &none           &none           &none 
                                &none           &kp SC(F19)     &none           &trans          &trans          &none           &none           &trans
            >;
        };

        adm_layer {
            label = "Admin";
            bindings = <
&sys_reset      &none           &none           &studio_unlock  &none           &none           &none           &kp C_BRI_UP    &kp SC(N7)      &kp SC(N8)      &kp SC(N9)      &kp C_VOL_UP 
&none           &none           &kp LALT        &kp LGUI        &none           &trans          &trans          &kp C_BRI_DN    &kp SC(N4)      &kp SC(N5)      &kp SC(N6)      &kp C_VOL_DN 
&none           &bt BT(0)       &bt BT(1)       &bt BT(2)       &bt BT_CLR      &trans          &trans          &none           &kp SC(N1)      &kp SC(N2)      &kp SC(N3)      &kp C_MUTE 
                                &trans          &none           &none           &none           &none           &none           &kp SC(N0)      &none 
            >;
        };
        
        wsd_layer {
            label = "WASD";
            bindings = <
&kp Q           &kp W           &kp E           &kp R           &kp T           &none           &none           &kp Y           &kp U           &kp I           &kp O           &kp P
&kp A           &kp S           &kp D           &kp F           &kp G           &none           &none           &kp H           &kp J           &kp K           &kp L           &kp SEMI  
&kp Z           &kp X           &kp C           &kp V           &kp B           &none           &none           &kp N           &kp M           &kp COMMA       &kp DOT         &kp SLASH  
                                &kp ESC         &kp SPACE       &kp TAB         &to DEF         &to DEF         &kp BSPC        &kp SPACE       &kp RET  
            >;
        };

    };
};

